<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CardDeckUpturnedObscuredHigher.AutomationProperties.HelpText" xml:space="preserve">
    <value>Deuxième de la carte de jeu renversée supérieure</value>
  </data>
  <data name="CardDeckUpturnedObscuredLower.AutomationProperties.HelpText" xml:space="preserve">
    <value>Troisième de la carte de jeu renversée haut</value>
  </data>
  <data name="CardPile1.AutomationProperties.Name" xml:space="preserve">
    <value>Première pile de cartes à jouer</value>
  </data>
  <data name="CardPile2.AutomationProperties.Name" xml:space="preserve">
    <value>Deuxième pile de carte de jeu</value>
  </data>
  <data name="CardPile3.AutomationProperties.Name" xml:space="preserve">
    <value>Troisième pile de cartes à jouer</value>
  </data>
  <data name="CardPile4.AutomationProperties.Name" xml:space="preserve">
    <value>Quatrième pile de carte de jeu</value>
  </data>
  <data name="CardPile5.AutomationProperties.Name" xml:space="preserve">
    <value>Cinquième pile de carte de jeu</value>
  </data>
  <data name="CardPile6.AutomationProperties.Name" xml:space="preserve">
    <value>Sixième pile de cartes à jouer</value>
  </data>
  <data name="CardPile7.AutomationProperties.Name" xml:space="preserve">
    <value>Septième pile de cartes à jouer</value>
  </data>
  <data name="endOfGameDialog.Content" xml:space="preserve">
    <value>Félicitations, vous avez gagné! Appuyez sur ENTER pour commencer une nouvelle partie.</value>
  </data>
  <data name="endOfGameDialog.PrimaryButtonText" xml:space="preserve">
    <value>Redémarrer le jeu</value>
  </data>
  <data name="endOfGameDialog.SecondaryButtonText" xml:space="preserve">
    <value>Quitter le jeu</value>
  </data>
  <data name="endOfGameDialog.Title" xml:space="preserve">
    <value>Fin du jeu</value>
  </data>
  <data name="LaunchHelpButton.Content" xml:space="preserve">
    <value>Obtenir de l'aide</value>
  </data>
  <data name="NextCardPile.AutomationProperties.FullDescription" xml:space="preserve">
    <value>Pile de cartes de jeu restant, face vers le bas.</value>
  </data>
  <data name="PlaySoundEffectsCheckBox.Content" xml:space="preserve">
    <value>Effets sonores</value>
  </data>
  <data name="PlayTTSNotificationsCheckBox.Content" xml:space="preserve">
    <value>Notification audio</value>
  </data>
  <data name="RestartGameButton.Content" xml:space="preserve">
    <value>Redémarrer le jeu</value>
  </data>
  <data name="SwitchScanSpeedLabel.Text" xml:space="preserve">
    <value>Réglage de la vitesse de mise en surbrillance:</value>
  </data>
  <data name="ClubsPile" xml:space="preserve">
    <value>Pile de Trèfles:</value>
  </data>
  <data name="DiamondsPile" xml:space="preserve">
    <value>Pile de Carreaux</value>
  </data>
  <data name="HeartsPile" xml:space="preserve">
    <value>Pile de Cœurs</value>
  </data>
  <data name="SpadesPile" xml:space="preserve">
    <value>Pile de Piques</value>
  </data>
  <data name="ShowNotificationWindowCheckBox.Content" xml:space="preserve">
    <value>Afficher la notification la plus récente</value>
  </data>
  <data name="MostRecentNotificationTextBox.AutomationProperties.Name" xml:space="preserve">
    <value>Notification la plus récente</value>
  </data>
  <data name="DealtCardPilesScrollViewer.AutomationProperties.Name" xml:space="preserve">
    <value>Piles de cartes à jouer distribuées</value>
  </data>
  <data name="DealtCardPilesScrollViewer.AutomationProperties.LocalizedLandmarkType" xml:space="preserve">
    <value>Cartes à jouer</value>
  </data>
  <data name="EnableAutomaticHintsCheckBox.AutomationProperties.Name" xml:space="preserve">
    <value>Activer les conseils automatiques</value>
  </data>
  <data name="EnableAutomaticHintsCheckBox.Content" xml:space="preserve">
    <value>Activer les conseils automatiques</value>
  </data>
  <data name="TargetPilesLandmark.AutomationProperties.Name" xml:space="preserve">
    <value>Cible jouant des cartes à jouer</value>
  </data>
  <data name="TargetPilesLandmark.AutomationProperties.LocalizedLandmarkType" xml:space="preserve">
    <value>Cartes à jouer</value>
  </data>
  <data name="TopCornerPilesLandmark.AutomationProperties.Name" xml:space="preserve">
    <value>Autres piles de cartes à jouer</value>
  </data>
  <data name="TopCornerPilesLandmark.AutomationProperties.LocalizedLandmarkType" xml:space="preserve">
    <value>Cartes à jouer</value>
  </data>
  <data name="CardDeckUpturned.AutomationProperties.HelpText" xml:space="preserve">
    <value>Top-la carte de jeu la plus renversée</value>
  </data>
  <data name="SingleKeyToMoveTextBlock.Text" xml:space="preserve">
    <value>Touche simple pour déplacer la carte à jouer.</value>
  </data>
  <data name="SelectWithoutAltKey.Text" xml:space="preserve">
    <value>Sélectionnez carte sans touche Alt.</value>
  </data>
  <data name="SetAccessKeyMapping.Content" xml:space="preserve">
    <value>Définir le mappage des touches d'accès</value>
  </data>
  <data name="CancelButton.Content" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="RestoreDefaultsButton.AccessKey" xml:space="preserve">
    <value>R</value>
  </data>
  <data name="RestoreDefaultsButton.Content" xml:space="preserve">
    <value>Restaurer les valeurs par défaut</value>
  </data>
  <data name="SetButton.Content" xml:space="preserve">
    <value>Accepter</value>
  </data>
  <data name="MapAccessKeysPrimaryButtonText" xml:space="preserve">
    <value>Accepter</value>
  </data>
  <data name="MapAccessKeysSecondaryButtonText" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="MapAccessKeysTitle" xml:space="preserve">
    <value>Définir les clés d'accès à utiliser dans Sa11ytaire</value>
  </data>
  <data name="queryDialog.CloseButtonText" xml:space="preserve">
    <value>Non</value>
  </data>
  <data name="queryDialog.Content" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir redémarrer le jeu?</value>
  </data>
  <data name="queryDialog.PrimaryButtonText" xml:space="preserve">
    <value>Oui</value>
  </data>
  <data name="queryDialog.Title" xml:space="preserve">
    <value>Redémarrer le jeu</value>
  </data>
  <data name="NextCardPile_NextCard" xml:space="preserve">
    <value>Prochaine carte de jeu</value>
  </data>
  <data name="NextCardPile_TurnOverCards" xml:space="preserve">
    <value>Retourner les cartes à jouer</value>
  </data>
  <data name="PlayerSignIn.Content" xml:space="preserve">
    <value>Connexion</value>
  </data>
  <data name="SigningIn" xml:space="preserve">
    <value>Connexion...</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>Vide</value>
  </data>
  <data name="FaceDown" xml:space="preserve">
    <value>Face vers le bas</value>
  </data>
  <data name="CanBeMovedToDealtCardPile" xml:space="preserve">
    <value>peut être déplacé à pile de carte traitée</value>
  </data>
  <data name="NoMoveIsAvailable" xml:space="preserve">
    <value>Aucun mouvement n'est disponible.</value>
  </data>
  <data name="InDealtCardPile" xml:space="preserve">
    <value>en tas de cartes à jouer distribuées</value>
  </data>
  <data name="MoreCardsAreAvailable" xml:space="preserve">
    <value>Plus de cartes à jouer sont disponibles pour retourner</value>
  </data>
  <data name="NoCardLeft" xml:space="preserve">
    <value>Pas de cartes laissées dans les cartes de jeu restant pile</value>
  </data>
  <data name="Off" xml:space="preserve">
    <value>hors</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>sur</value>
  </data>
  <data name="OnTop" xml:space="preserve">
    <value>sur le dessus</value>
  </data>
  <data name="Revealed" xml:space="preserve">
    <value>Révélé</value>
  </data>
  <data name="Selected" xml:space="preserve">
    <value>sélectionné</value>
  </data>
  <data name="SwitchControl" xml:space="preserve">
    <value>Le contrôle de commutation est maintenant sur</value>
  </data>
  <data name="TargetPiles" xml:space="preserve">
    <value>Pieux cibles</value>
  </data>
  <data name="Then" xml:space="preserve">
    <value>puis</value>
  </data>
  <data name="ThereAreNoUpturnedCards" xml:space="preserve">
    <value>Il n'y a pas de cartes de jeu inversées disponibles</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>à</value>
  </data>
  <data name="TopUpturnedCardIs" xml:space="preserve">
    <value>La carte de jeu renversée supérieure est</value>
  </data>
  <data name="Upturned" xml:space="preserve">
    <value>Retroussé</value>
  </data>
  <data name="AccessKeyClubsPileLabel.Text" xml:space="preserve">
    <value>Pile de Trèfles:</value>
  </data>
  <data name="AccessKeyDealtCardPile1Label.Text" xml:space="preserve">
    <value>Première pile de cartes à jouer</value>
  </data>
  <data name="AccessKeyDealtCardPile2Label.Text" xml:space="preserve">
    <value>Deuxième pile de carte de jeu</value>
  </data>
  <data name="AccessKeyDealtCardPile3Label.Text" xml:space="preserve">
    <value>Troisième pile de cartes à jouer</value>
  </data>
  <data name="AccessKeyDealtCardPile4Label.Text" xml:space="preserve">
    <value>Quatrième pile de carte de jeu</value>
  </data>
  <data name="AccessKeyDealtCardPile5Label.Text" xml:space="preserve">
    <value>Cinquième pile de carte de jeu</value>
  </data>
  <data name="AccessKeyDealtCardPile6Label.Text" xml:space="preserve">
    <value>Sixième pile de cartes à jouer</value>
  </data>
  <data name="AccessKeyDealtCardPile7Label.Text" xml:space="preserve">
    <value>Septième pile de cartes à jouer</value>
  </data>
  <data name="AccessKeyDiamondsPileLabel.Text" xml:space="preserve">
    <value>Pile de Carreaux</value>
  </data>
  <data name="AccessKeyHeartsPileLabel.Text" xml:space="preserve">
    <value>Pile de Cœurs</value>
  </data>
  <data name="AccessKeyNextCardLabel.Text" xml:space="preserve">
    <value>Prochaine carte de jeu</value>
  </data>
  <data name="AccessKeySpadesPileLabel.Text" xml:space="preserve">
    <value>Pile de Piques</value>
  </data>
  <data name="AccessKeyUpturnedCardLabel.Text" xml:space="preserve">
    <value>Carte de jeu renversée:</value>
  </data>
  <data name="SwitchControlOnTextBlock" xml:space="preserve">
    <value>Commande de commutation.</value>
  </data>
  <data name="Ace" xml:space="preserve">
    <value>l'as</value>
  </data>
  <data name="Jack" xml:space="preserve">
    <value>Valet</value>
  </data>
  <data name="King" xml:space="preserve">
    <value>Roi</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>de</value>
  </data>
  <data name="Queen" xml:space="preserve">
    <value>Dame</value>
  </data>
  <data name="8" xml:space="preserve">
    <value>Huit</value>
  </data>
  <data name="5" xml:space="preserve">
    <value>Cinq</value>
  </data>
  <data name="4" xml:space="preserve">
    <value>Quatre</value>
  </data>
  <data name="9" xml:space="preserve">
    <value>Neuf</value>
  </data>
  <data name="1" xml:space="preserve">
    <value>Un</value>
  </data>
  <data name="7" xml:space="preserve">
    <value>Sept</value>
  </data>
  <data name="6" xml:space="preserve">
    <value>Six</value>
  </data>
  <data name="10" xml:space="preserve">
    <value>Dix</value>
  </data>
  <data name="3" xml:space="preserve">
    <value>Trois</value>
  </data>
  <data name="2" xml:space="preserve">
    <value>Deux</value>
  </data>
  <data name="Clubs" xml:space="preserve">
    <value>Trèfles</value>
  </data>
  <data name="Diamonds" xml:space="preserve">
    <value>Carreaux</value>
  </data>
  <data name="Hearts" xml:space="preserve">
    <value>Cœurs</value>
  </data>
  <data name="Spades" xml:space="preserve">
    <value>Piques</value>
  </data>
  <data name="SelectCardWithoutAltKeyCheckBox.Content" xml:space="preserve">
    <value>Sélectionnez carte sans touche Alt</value>
  </data>
  <data name="SingleKeyToMoveCardCheckBox.Content" xml:space="preserve">
    <value>Touche simple pour déplacer la carte à jouer</value>
  </data>
</root>